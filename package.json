{
  "name": "inventory-update-service",
  "version": "1.2.1",
  "private": true,
  "description": "This service is responsible to update seat inventorys in system",
  "repository": {
    "type": "git",
    "url": "git@github.com:inventory-service/inventory-update-service"
  },
  "author": "inventory-service",
  "main": "src/lambda.ts",
  "scripts": {
    "prebuild": "rm -rf dist",
    "build": "tsc",
    "postbuild": "pnpm prune --production; cp -r node_modules dist/node_modules; [ \"$CI\" = \"true\" ] || pnpm install",
    "deploy:cleanup": "make cleanup",
    "deploy:production": "STAGE=production make deploy",
    "deploy:staging": "STAGE=staging make deploy",
    "deploy:test": "STAGE=test make deploy",
    "deploy:uat": "STAGE=uat make deploy",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "format:tf": "terraform fmt -recursive -check -diff",
    "format:tf:fix": "terraform fmt -recursive -write",
    "preinstall": "npx only-allow pnpm",
    "lint": "eslint . --ext .js,.ts",
    "lint-format": "pnpm run lint && pnpm run format:check",
    "lint-format:fix": "pnpm run lint:fix && pnpm run format",
    "lint:fix": "eslint . --ext .js,.ts --fix",
    "plan:production": "env TF_WORKSPACE=production pnpm run terraform:plan",
    "plan:staging": "env TF_WORKSPACE=staging pnpm run terraform:plan",
    "plan:uat": "env TF_WORKSPACE=uat pnpm run terraform:plan",
    "prepare": "husky install",
    "release": "semantic-release",
    "start": "sls offline",
    "terraform:apply": "cd terraform && terraform:init && terraform apply",
    "terraform:init": "cd terraform && terraform init",
    "terraform:plan": "cd terraform && terraform:init && cd terraform && terraform plan",
    "test": "jest",
    "test:e2e": "jest --config jest.config.e2e.js --passWithNoTests",
    "test:watch": "jest --watch",
    "typecheck": "tsc"
  },
  "dependencies": {
    "@inventory-service/server-logger-library": "4.0.0",
    "@aws-sdk/client-secrets-manager": "^3.629.0",
    "@aws-sdk/credential-provider-node": "^3.624.0",
    "set-cookie-parser": "^2.7.0",
    "zod": "^3.23.8"
  },
  "devDependencies": {
    "@inventory-service/config": "^3.0.3",
    "@inventory-service/eslint-config": "^2.0.1",
    "@aws-sdk/client-eventbridge": "^3.626.0",
    "@commitlint/cli": "^19.3.0",
    "@commitlint/config-conventional": "^19.2.2",
    "@eslint/compat": "^1.1.0",
    "@eslint/eslintrc": "^3.1.0",
    "@eslint/js": "^9.5.0",
    "@semantic-release/commit-analyzer": "^13.0.0",
    "@semantic-release/git": "^10.0.1",
    "@semantic-release/github": "^10.0.6",
    "@semantic-release/npm": "^12.0.1",
    "@semantic-release/release-notes-generator": "^14.0.0",
    "@serverless/typescript": "^3.38.0",
    "@swc/jest": "^0.2.36",
    "@tsconfig/recommended": "^1.0.7",
    "@tsconfig/strictest": "^2.0.5",
    "@types/aws-lambda": "^8.10.140",
    "@types/jest": "^29.5.12",
    "@types/node": "^20.14.5",
    "@types/set-cookie-parser": "^2.4.10",
    "@typescript-eslint/eslint-plugin": "^7.13.1",
    "@typescript-eslint/parser": "^7.13.1",
    "commitlint": "^19.3.0",
    "esbuild": "0.20.2",
    "eslint": "^8.57.0",
    "eslint-import-resolver-typescript": "^3.6.1",
    "eslint-plugin-compat": "4.2.0",
    "eslint-plugin-eslint-comments": "^3.2.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jest": "^28.6.0",
    "eslint-plugin-prettier": "^5.1.3",
    "eslint-plugin-promise": "^6.2.0",
    "https-proxy-agent": "^5.0.1",
    "husky": "^9.0.11",
    "jest": "^29.7.0",
    "lint-staged": "^15.2.7",
    "newrelic": "^11.19.0",
    "prettier": "^3.3.2",
    "rimraf": "^5.0.7",
    "semantic-release": "^24.0.0",
    "semantic-release-slack-bot": "^4.0.2",
    "serverless": "3.39.0",
    "serverless-esbuild": "^1.52.1",
    "serverless-newrelic-lambda-layers": "^5.3.0",
    "serverless-offline": "^13.6.0",
    "serverless-plugin-lambda-insights": "^2.0.0",
    "ts-custom-error": "^3.3.1",
    "ts-jest": "^29.1.5",
    "ts-loader": "^9.5.1",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.4.5"
  },
  "engines": {
    "node": ">=20",
    "pnpm": ">=9"
  },
  "resolutions": {
    "get-tsconfig": "4.7.3",
    "serverless-newrelic-lambda-layers@^5.3.0>node-fetch": "^2.6.7"
  }
}
